stages:
  - lint
  - test
  - build
  - deploy

variables:
  NODE_ENV: production

lint:
  tags:
    - runner-beast-new
  stage: lint
  before_script:
    - cd frontend || exit 1
    - npm install
    - npm list eslint
    - node -v
    - npm install --save-dev eslint typescript jiti @typescript-eslint/parser @typescript-eslint/eslint-plugin
  script:
    - echo '{"extends": "eslint:recommended"}' > .eslintrc.json
    - npm run lint || true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

test:
  tags:
    - runner-beast-new
  stage: test
  before_script:
    - cd backend || exit 1
    - npm install
    - npx prisma generate --schema=./db/prisma/schema.prisma
  script:
    - npm run test
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

build:
  tags:
    - runner-beast-new
  stage: build
  before_script:
    - cd frontend || exit 1
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
      - frontend/dist
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

deploy-backend:
  tags:
    - runner-beast-new
  stage: deploy
  before_script:
    - git config --global --add safe.directory /home/deploy/app/beast-academy-app
  script:
    - cd /home/deploy/app/beast-academy-app
    - git pull origin main
    - cd backend
    - npm install
    - npx prisma generate --schema=./db/prisma/schema.prisma
    - sudo -u deploy pm2 restart beast-backend || sudo -u deploy pm2 start index.js --name "beast-backend"
    - sudo -u deploy pm2 save
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  when: manual
  allow_failure: false

deploy-frontend:
  tags:
    - runner-beast-new
  stage: deploy
  script:
    - cd /home/deploy/app/beast-academy-app
    - git pull origin main
    - cd frontend
    - npm install
    - npm run build
    - sudo -u deploy pm2 restart beast-frontend || sudo -u deploy pm2 start "serve -s dist -l 5173" --name "beast-frontend"
    - sudo -u deploy pm2 save
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  when: manual
  allow_failure: false
